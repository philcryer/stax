#cloud-config

users:
  - name: skydns
    system: true
coreos:
  update:
    reboot-strategy: etcd-lock
  etcd:
    discovery: https://discovery.etcd.io/<token>
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  fleet:
    public-ip: $private_ipv4
    metadata: public_ip=$public_ipv4,region=us-west-2,instance-type=m3.medium
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: skydns.installer.service
      command: start
      content: |
        [Unit]
        Description=SkyDNS Installer
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=-/usr/bin/mkdir -p /var/lib/skydns/bin
        ExecStart=-/usr/bin/curl -o /var/lib/skydns/bin/skydns https://s3-us-west-2.amazonaws.com/coreos-beta/skydns
        ExecStart=/usr/bin/chown skydns:skydns /var/lib/skydns/bin/skydns
        ExecStart=/usr/bin/chmod +x /var/lib/skydns/bin/skydns
    - name: skydns.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=skydns
        Requires=skydns.installer.service
        Requires=etcd.service
        Requires=docker.service
        After=skydns.installer.service
        After=etcd.service
        After=docker.service
        [Service]
        User=skydns
        Group=skydns
        Type=simple
        ExecStartPre=/usr/bin/etcdctl set /skydns/local/cluster/hosts/%m '{\"host\":\"${COREOS_PRIVATE_IPV4}\"}'
        ExecStart=/var/lib/skydns/bin/skydns -addr 172.17.42.1:5333 -verbose=true -discover=true -domain cluster.local. -local %m.hosts.cluster.local
        ExecStopPost=/usr/bin/etcdctl rm /skydns/local/cluster/hosts/%m
        PermissionsStartOnly=true
        ExecStartPre=-/sbin/iptables -D INPUT -p udp --dport 5333 -j ACCEPT
        ExecStartPre=-/sbin/iptables -t nat -D PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 5333
        ExecStartPre=/sbin/iptables -A INPUT -p udp --dport 5333 -j ACCEPT
        ExecStartPre=/sbin/iptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 5333
        ExecStopPost=/sbin/iptables -D INPUT -p udp --dport 5333 -j ACCEPT
        ExecStopPost=/sbin/iptables -t nat -D PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 5333
        Restart=always
        RestartSec=5
        ReadOnlyDirectories=/etc
        [Install]
        WantedBy=multi-user.target
    - name: cadvisor.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=cAdvisor
        Requires=docker.service
        After=docker.service
        After=skydns.service
        [Service]
        Type=simple
        Environment=ENV=test
        ExecStart=/usr/bin/docker run \
          --volume=/var/run:/var/run:rw \
          --volume=/sys:/sys:ro \
          --volume=/var/lib/docker/:/var/lib/docker:ro \
          --volume=/tmp:/tmp:rw \
          --publish=8080:8080 \
          --name=cadvisor \
          --dns-search=${ENV}.cluster.local \
          google/cadvisor:latest \
            -storage_driver=influxdb \
            -storage_driver_host=influxdb-1:8086 \
            -storage_driver_db=cadvisor \
            -storage_driver_user=root \
            -storage_driver_password=root
        Restart=always
        RestartSec=5
        [Install]
        WantedBy=multi-user.target
    - name: sysinfo_influxdb.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=sysinfo_influxdb
        Requires=docker.service
        After=docker.service
        After=skydns.service
        [Service]
        Type=simple
        Environment="ENV=test"
        Restart=always
        RestartSec=10
        ExecStart=/usr/bin/docker run \
          --name=sysinfo_influxdb \
          --dns-search ${ENV}.cluster.local \
          nordstrom/sysinfo_influxdb:latest
        [Install]
        WantedBy=multi-user.target
